version: '3.8'

services:
  # Main API Server (FastAPI) - Required for groq-speech-ui
  groq-speech-api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: groq-speech-api
    ports:
      - "8000:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - HF_TOKEN=${HF_TOKEN}
      - GROQ_API_BASE=${GROQ_API_BASE_URL:-https://api.groq.com/openai/v1}
      - GROQ_MODEL_ID=${GROQ_MODEL_ID:-whisper-large-v3}
      - GROQ_TEMPERATURE=${GROQ_TEMPERATURE:-0.0}
      - AUDIO_SAMPLE_RATE=${AUDIO_SAMPLE_RATE:-16000}
      - AUDIO_CHANNELS=${AUDIO_CHANNELS:-1}
      - MAX_AUDIO_FILE_SIZE=${MAX_AUDIO_FILE_SIZE:-25000000}
      - DIARIZATION_MIN_SEGMENT_DURATION=${DIARIZATION_MIN_SEGMENT_DURATION:-2.0}
      - DIARIZATION_SILENCE_THRESHOLD=${DIARIZATION_SILENCE_THRESHOLD:-0.8}
      - DIARIZATION_MAX_SEGMENTS_PER_CHUNK=${DIARIZATION_MAX_SEGMENTS_PER_CHUNK:-8}
      - DIARIZATION_CHUNK_STRATEGY=${DIARIZATION_CHUNK_STRATEGY:-adaptive}
      - DIARIZATION_MAX_SPEAKERS=${DIARIZATION_MAX_SPEAKERS:-5}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    volumes:
      - ../../logs:/app/logs
      - ../../temp:/app/temp
      - ../../uploads:/app/uploads
    networks:
      - groq-speech-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["uvicorn", "api.server:app", "--host", "0.0.0.0", "--port", "8000"]

  # Redis for caching and session management (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: groq-speech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - groq-speech-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development service (for local development)
  groq-speech-dev:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.dev
    container_name: groq-speech-dev
    ports:
      - "8001:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - HF_TOKEN=${HF_TOKEN}
      - GROQ_API_BASE=${GROQ_API_BASE_URL:-https://api.groq.com/openai/v1}
      - GROQ_MODEL_ID=${GROQ_MODEL_ID:-whisper-large-v3}
      - GROQ_TEMPERATURE=${GROQ_TEMPERATURE:-0.0}
      - AUDIO_SAMPLE_RATE=${AUDIO_SAMPLE_RATE:-16000}
      - AUDIO_CHANNELS=${AUDIO_CHANNELS:-1}
      - MAX_AUDIO_FILE_SIZE=${MAX_AUDIO_FILE_SIZE:-25000000}
      - DIARIZATION_MIN_SEGMENT_DURATION=${DIARIZATION_MIN_SEGMENT_DURATION:-2.0}
      - DIARIZATION_SILENCE_THRESHOLD=${DIARIZATION_SILENCE_THRESHOLD:-0.8}
      - DIARIZATION_MAX_SEGMENTS_PER_CHUNK=${DIARIZATION_MAX_SEGMENTS_PER_CHUNK:-8}
      - DIARIZATION_CHUNK_STRATEGY=${DIARIZATION_CHUNK_STRATEGY:-adaptive}
      - DIARIZATION_MAX_SPEAKERS=${DIARIZATION_MAX_SPEAKERS:-5}
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
    volumes:
      - ../../:/app
      - ../../logs:/app/logs
    networks:
      - groq-speech-network
    restart: unless-stopped
    profiles:
      - dev

networks:
  groq-speech-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
