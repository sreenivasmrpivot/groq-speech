version: '3.8'

services:
  # Backend API Server (FastAPI)
  groq-speech-api:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.dev
    container_name: groq-speech-api
    ports:
      - "8000:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_API_BASE_URL=${GROQ_API_BASE_URL:-https://api.groq.com/openai/v1}
      - LOG_LEVEL=DEBUG
      - ENVIRONMENT=development
    volumes:
      - ../../:/app
      - ../../logs:/app/logs
      - ../../temp:/app/temp
      - ../../uploads:/app/uploads
    networks:
      - groq-speech-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Frontend (Next.js)
  groq-speech-ui:
    build:
      context: ../../examples/groq-speech-ui
      dockerfile: Dockerfile
    container_name: groq-speech-ui
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://groq-speech-api:8000
      - NODE_ENV=development
    volumes:
      - ../../examples/groq-speech-ui:/app
      - /app/node_modules
      - /app/.next
    networks:
      - groq-speech-network
    restart: unless-stopped
    depends_on:
      groq-speech-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: groq-speech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - groq-speech-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  groq-speech-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
